name: Build and Release JAR

on:
  push:
    tags:
      - 'v*' # This workflow is triggered with every new pushed tag

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '24'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean package

      - name: List Target Directory
        run: ls -l target

      - name: Extract Version
        id: extract_version
        run: |
          RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV
          echo "${RELEASE_VERSION}" > release_version.txt

      - name: Upload Release Version
        uses: actions/upload-artifact@v4
        with:
          name: release-version
          path: release_version.txt

      - name: Upload JAR File
        uses: actions/upload-artifact@v4
        with:
          name: jar-file
          path: target/*.jar

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Release Version
        uses: actions/download-artifact@v4
        with:
          name: release-version

      - name: Set Release Version
        run: |
          RELEASE_VERSION=$(cat release_version.txt)
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV

      - name: Download JAR File
        uses: actions/download-artifact@v4
        with:
          name: jar-file

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload JAR to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/expense-monitor-${{ env.RELEASE_VERSION }}-release.jar
          asset_name: expense-monitor-${{ env.RELEASE_VERSION }}-release.jar
          asset_content_type: application/java-archive
